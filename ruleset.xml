<?xml version="1.0"?>
<ruleset name="My first PHPMD rule set"
         xmlns="http://pmd.sf.net/ruleset/1.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0
                     http://pmd.sf.net/ruleset_xml_schema.xsd"
         xsi:noNamespaceSchemaLocation="
                     http://pmd.sf.net/ruleset_xml_schema.xsd">
    <description>
        My custom rule set that checks my code...
    </description>
   

    
    <rule ref="rulesets/codesize.xml">
        <exclude name="ExcessiveMethodLength" />
        <exclude name="ExcessiveClassLength" />
        <exclude name="TooManyPublicMethods" />
    </rule>

    <rule ref="rulesets/unusedcode.xml">
        <exclude name="ExcessiveClassLength" />
    </rule>
    
    
    <rule name="ExcessiveMethodLength"
          since="0.1"
          message="The {0} {1}() has {2} lines of code. Current threshold is set to {3}. Avoid really long methods."
          class="PHPMD\Rule\Design\LongMethod"
          externalInfoUrl="https://phpmd.org/rules/codesize.html#excessivemethodlength">
        <description>
            Violations of this rule usually indicate that the method is doing
            too much. Try to reduce the method size by creating helper methods and removing any copy/pasted code.
        </description>
        <priority>3</priority>
        <properties>
            <property name="minimum" description="The method size reporting threshold" value="150"/>
            <property name="ignore-whitespace" description="Count whitespace in reporting threshold" value="false"/>
        </properties>
        <example>
            <![CDATA[
class Foo {
    public function doSomething() {
        print("Hello world!" . PHP_EOL);
        print("Hello world!" . PHP_EOL);
        // 98 copies omitted for brevity.
    }
}
            ]]>
        </example>
    </rule>
    
    
    <rule ref="rulesets/codesize.xml/ExcessiveClassLength">
        <properties>
            <property name="minimum" value="1700"/>
        </properties>
    </rule>

    <rule name="TooManyPublicMethods"
          since="0.1"
          class="PHPMD\Rule\Design\TooManyPublicMethods"
          message="The {0} {1} has {2} public methods. Consider refactoring {1} to keep number of public methods under {3}."
          externalInfoUrl="https://phpmd.org/rules/codesize.html#toomanypublicmethods">
        <description>
            <![CDATA[
A class with too many public methods is probably a good suspect for refactoring, in
order to reduce its complexity and find a way to have more fine grained objects.
By default it ignores methods starting with 'get' or 'set'.
            ]]>
        </description>
        <priority>3</priority>
        <properties>
            <property name="maxmethods" description="The method count reporting threshold" value="20"/>
            <property name="ignorepattern" description="Ignore methods matching this regex" value="(^(set|get))i"/>
        </properties>
    </rule>

    <rule ref="rulesets/naming.xml">
        <exclude name="ShortVariable" />
        <exclude name="LongVariable" />
        <exclude name="ShortMethodName" />
    </rule>
    
    <rule name="ShortMethodName"
          since="0.2"
          message="Avoid using short method names like {0}::{1}(). The configured minimum method name length is {2}."
          class="PHPMD\Rule\Naming\ShortMethodName"
          externalInfoUrl="https://phpmd.org/rules/naming.html#shortmethodname">
        <priority>3</priority>
        <properties>
            <property name="minimum" description="Minimum length for a method or function name" value="2"/>
            <property name="exceptions" description="Comma-separated list of exceptions" value=""/>
        </properties>
       
    </rule>

    <rule ref="rulesets/naming.xml/ShortVariable"
          since="0.2"
          message="Avoid variables with short names like {0}. Configured minimum length is {1}."
          class="PHPMD\Rule\Naming\ShortVariable"
          externalInfoUrl="http://phpmd.org/rules/naming.html#shortvariable">
        <priority>3</priority>
        <properties>
            <property name="minimum" description="Minimum length for a variable, property or parameter name" value="3"/>
            <property name="exceptions" value="id,q,w,i,j,v,e,f,fp" />
        </properties>
    </rule>

    <rule ref="rulesets/naming.xml/LongVariable"
          since="0.2"
          message="Avoid excessively long variable names like {0}. Keep variable name length under {1}."
          class="PHPMD\Rule\Naming\LongVariable"
          externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable">
        <description>
            Detects when a field, formal or local variable is declared with a long name.
        </description>
        <priority>3</priority>
        <properties>
            <property name="maximum" description="The variable length reporting threshold" value="25"/>
        </properties>
    </rule>

    <!--<rule ref="rulesets/design.xml" />-->
    
</ruleset>
